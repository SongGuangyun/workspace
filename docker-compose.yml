version: '3.0'
services:

  ### NGINX #########################################
  nginx:
    container_name: my_nginx
    build:
      context: ./nginx
      args:
        - NGINX_VERSION=${NGINX_VERSION}
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    volumes:
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d:ro
      - ${APP_CODE_PATH_HOST}:/data/www:rw
      - ${NGINX_LOG_PATH}:/var/log/nginx
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl

  ### PHP-FPM ##############################################

  php-fpm:
    container_name: my_php
    build:
      context: ./php-fpm
      args:
        - IMAGE_TAG=latest
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_AMQP=false
        - INSTALL_PHPREDIS=true
        - INSTALL_IMAGEMAGICK=true
        - IMAGEMAGICK_VERSION=latest
        - INSTALL_IMAGE_OPTIMIZERS=true
        - INSTALL_BCMATH=true
        - INSTALL_PCNTL=true
        - INSTALL_SWOOLE=true
        - INSTALL_OPCACHE=true
        - INSTALL_MYSQLI=true
        - PUID=1000
        - PGID=1000
        - LOCALE=POSIX
        - INSTALL_INTL=true
    expose:
      - "9000"
    volumes:
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:/var/www:rw

  ### MySQL ################################################
  mysql:
    container_name: my_mysql
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql

  ### Redis ################################################
  redis:
    container_name: my_redis
    build:
      context: ./redis
      args:
        - REDIS_VERSION=${REDIS_VERSION}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    command: --requirepass ${REDIS_PASSWORD}

  ### Redis Cluster ##########################################
  redis-cluster:
    container_name: my_redis_cluster
    build:
      context: ./redis-cluster
    ports:
      - "7000-7005:7000-7005"

  ### Gitlab ################################################
  gitlab:
    container_name: my_gitlab
    build:
      context: ./gitlab
      args:
        - GITLAB_VERSION=latest
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost'
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = 'smtp.exmail.qq.com'
        gitlab_rails['smtp_port'] = 465
        gitlab_rails['smtp_user_name'] = 'xxx@qq.com'
        gitlab_rails['smtp_password'] = 'xxx'
        gitlab_rails['smtp_domain'] = 'qq.com'
        gitlab_rails['smtp_authentication'] = 'login'
        gitlab_rails['smtp_enable_starttls_auto'] = true
        gitlab_rails['gitlab_root_email'] = 'xxx@qq.com'
        gitlab_rails['initial_root_password'] = 'Qwe@123456'
        gitlab_rails['gitlab_email_enabled'] = true
        gitlab_rails['gitlab_email_from'] = 'gitlab@localhost'
        gitlab_rails['gitlab_email_display_name'] = 'Ryan'
    ports:
      - "8989:80"
      - "9898:443"
    volumes:
      - ${DATA_PATH_HOST}/gitlab/config:/etc/gitlab # 挂载gitlab配置文件
      - ${DATA_PATH_HOST}/gitlab/data:/var/opt/gitlab # 挂载gitlab数据
      - ./logs/gitlab:/var/log/gitlab # 挂载gitlab日志

    restart: always

  ### Jenkins #########################################
  jenkins:
    container_name: my_jenkins
    build:
      context: ./jenkins
    ports:
      - "8090:8080"
      - "50000:50000"
    volumes:
      - ./jenkins/jenkins_home:/var/jenkins_home
